{"ast":null,"code":"import _classCallCheck from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/src/components/book-list/book-list.js\";\nimport React, { Component } from 'react';\nimport BookListItem from \"../book-list-item\";\nimport { connect } from 'react-redux';\nimport { withBookstoreService } from '../hoc';\nimport { booksLoaded, booksRequested, booksError } from '../../actions';\nimport { compose } from '../../utils';\nimport PropTypes from 'prop-types';\nimport './book-list.css';\nimport Spinner from \"../spinner\";\nimport ErrorIndicator from \"../error-indicator\";\n\nvar BookList = /*#__PURE__*/function (_Component) {\n  _inherits(BookList, _Component);\n\n  function BookList(props) {\n    _classCallCheck(this, BookList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BookList).call(this, props));\n  }\n\n  _createClass(BookList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var fetchBooks = this.props.fetchBooks;\n      fetchBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          books = _this$props.books,\n          loading = _this$props.loading,\n          error = _this$props.error;\n      var booksForRender = books.map(function (book) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: book.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(BookListItem, {\n          book: book,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 27\n          }\n        }));\n      });\n\n      if (loading) {\n        return /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 14\n          }\n        });\n      }\n\n      if (error) {\n        return /*#__PURE__*/React.createElement(ErrorIndicator, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"book-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, booksForRender);\n    }\n  }]);\n\n  return BookList;\n}(Component);\n\nBookList.propTypes = {\n  books: PropTypes.arrayOf(PropTypes.object),\n  booksLoaded: PropTypes.func,\n  booksRequested: PropTypes.func,\n  booksError: PropTypes.func,\n  loading: PropTypes.bool.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var books = _ref.books,\n      loading = _ref.loading,\n      error = _ref.error;\n  return {\n    books: books,\n    loading: loading,\n    error: error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {\n  return {\n    fetchBooks: function fetchBooks() {\n      var getAll = ownProps.getAll;\n      dispatch(booksRequested());\n      getAll().then(function (data) {\n        return dispatch(booksLoaded(data));\n      }).catch(function (error) {\n        return dispatch(booksError(error));\n      });\n    }\n  };\n};\n\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(BookList);","map":{"version":3,"sources":["/Users/ruslan/Desktop/petProjects/react-apps/re-store/src/components/book-list/book-list.js"],"names":["React","Component","BookListItem","connect","withBookstoreService","booksLoaded","booksRequested","booksError","compose","PropTypes","Spinner","ErrorIndicator","BookList","props","fetchBooks","books","loading","error","booksForRender","map","book","id","propTypes","arrayOf","object","func","bool","isRequired","mapStateToProps","mapDispatchToProps","dispatch","ownProps","getAll","then","data","catch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport BookListItem from \"../book-list-item\";\nimport { connect } from 'react-redux';\nimport { withBookstoreService } from '../hoc'\nimport { booksLoaded, booksRequested, booksError } from '../../actions';\nimport {compose} from '../../utils';\nimport PropTypes from 'prop-types';\n\nimport './book-list.css'\nimport Spinner from \"../spinner\";\nimport ErrorIndicator from \"../error-indicator\";\n\nclass BookList extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { fetchBooks } = this.props;\n    fetchBooks();\n  }\n\n  render() {\n    const { books, loading, error } = this.props;\n    const booksForRender = books.map((book) => {\n      return (\n        <li key={book.id}><BookListItem book={book}/></li>\n      )\n    })\n    if (loading) {\n      return <Spinner />\n    }\n    if (error) {\n      return <ErrorIndicator />\n    }\n    return (\n      <ul className='book-list'>\n        {booksForRender}\n      </ul>\n    )\n  }\n}\n\nBookList.propTypes = {\n  books: PropTypes.arrayOf(PropTypes.object),\n  booksLoaded: PropTypes.func,\n  booksRequested: PropTypes.func,\n  booksError: PropTypes.func,\n  loading: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = ({books, loading, error}) => {\n  return {\n    books,\n    loading,\n    error\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    fetchBooks: () => {\n      const { getAll } = ownProps;\n      dispatch(booksRequested());\n      getAll()\n        .then((data) => dispatch(booksLoaded(data)))\n        .catch((error) => dispatch(booksError(error)))\n    }\n  }\n}\n\nexport default compose(\n  withBookstoreService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(BookList);"]},"metadata":{},"sourceType":"module"}