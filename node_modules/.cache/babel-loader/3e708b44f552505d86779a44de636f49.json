{"ast":null,"code":"import _classCallCheck from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/src/components/book-list/book-list.js\";\nimport React, { Component } from 'react';\nimport BookListItem from \"../book-list-item\";\nimport { connect } from 'react-redux';\nimport { withBookstoreService } from '../hoc';\nimport { booksLoaded } from '../../actions';\nimport { compose } from '../../utils';\nimport PropTypes from 'prop-types';\nimport './book-list.css';\nimport Spinner from \"../spinner\";\n\nvar BookList = /*#__PURE__*/function (_Component) {\n  _inherits(BookList, _Component);\n\n  function BookList(props) {\n    _classCallCheck(this, BookList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BookList).call(this, props));\n  }\n\n  _createClass(BookList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          getAll = _this$props.bookstoreService.getAll,\n          booksLoaded = _this$props.booksLoaded;\n      getAll().then(function (data) {\n        return booksLoaded(data);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props2 = this.props,\n          books = _this$props2.books,\n          loading = _this$props2.loading;\n      var booksForRender = books.map(function (book) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: book.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(BookListItem, {\n          book: book,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 27\n          }\n        }));\n      });\n\n      if (loading) {\n        return /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"book-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, booksForRender);\n    }\n  }]);\n\n  return BookList;\n}(Component);\n\nBookList.propTypes = {\n  books: PropTypes.arrayOf(PropTypes.object),\n  booksLoaded: PropTypes.func,\n  loading: PropTypes.bool.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var books = _ref.books,\n      loading = _ref.loading;\n  return {\n    books: books,\n    loading: loading\n  };\n};\n\nvar mapDispatchToProps = {\n  booksLoaded: booksLoaded\n};\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(BookList);","map":{"version":3,"sources":["/Users/ruslan/Desktop/petProjects/react-apps/re-store/src/components/book-list/book-list.js"],"names":["React","Component","BookListItem","connect","withBookstoreService","booksLoaded","compose","PropTypes","Spinner","BookList","props","getAll","bookstoreService","then","data","books","loading","booksForRender","map","book","id","propTypes","arrayOf","object","func","bool","isRequired","mapStateToProps","mapDispatchToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,QAArC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,iBAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;;IAEMC,Q;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iFACXA,KADW;AAElB;;;;wCAEmB;AAAA,wBACgC,KAAKA,KADrC;AAAA,UACQC,MADR,eACXC,gBADW,CACQD,MADR;AAAA,UACiBN,WADjB,eACiBA,WADjB;AAElBM,MAAAA,MAAM,GACHE,IADH,CACQ,UAACC,IAAD;AAAA,eAAUT,WAAW,CAACS,IAAD,CAArB;AAAA,OADR;AAGD;;;6BAEQ;AAAA;;AAAA,yBACoB,KAAKJ,KADzB;AAAA,UACCK,KADD,gBACCA,KADD;AAAA,UACQC,OADR,gBACQA,OADR;AAEP,UAAMC,cAAc,GAAGF,KAAK,CAACG,GAAN,CAAU,UAACC,IAAD,EAAU;AACzC,4BACE;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkB,oBAAC,YAAD;AAAc,UAAA,IAAI,EAAED,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlB,CADF;AAGD,OAJsB,CAAvB;;AAKA,UAAIH,OAAJ,EAAa;AACX,4BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,0BACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,cADH,CADF;AAKD;;;;EA3BoBhB,S;;AA8BvBQ,QAAQ,CAACY,SAAT,GAAqB;AACnBN,EAAAA,KAAK,EAAER,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACgB,MAA5B,CADY;AAEnBlB,EAAAA,WAAW,EAAEE,SAAS,CAACiB,IAFJ;AAGnBR,EAAAA,OAAO,EAAET,SAAS,CAACkB,IAAV,CAAeC;AAHL,CAArB;;AAMA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAsB;AAAA,MAApBZ,KAAoB,QAApBA,KAAoB;AAAA,MAAbC,OAAa,QAAbA,OAAa;AAC5C,SAAO;AACLD,IAAAA,KAAK,EAALA,KADK;AAELC,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALD;;AAOA,IAAMY,kBAAkB,GAAG;AACzBvB,EAAAA,WAAW,EAAXA;AADyB,CAA3B;AAIA,eAAeC,OAAO,CACpBF,oBAAoB,EADA,EAEpBD,OAAO,CAACwB,eAAD,EAAkBC,kBAAlB,CAFa,CAAP,CAGbnB,QAHa,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport BookListItem from \"../book-list-item\";\nimport { connect } from 'react-redux';\nimport { withBookstoreService } from '../hoc'\nimport { booksLoaded } from '../../actions';\nimport {compose} from '../../utils';\nimport PropTypes from 'prop-types';\n\nimport './book-list.css'\nimport Spinner from \"../spinner\";\n\nclass BookList extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const {bookstoreService: {getAll}, booksLoaded} = this.props;\n    getAll()\n      .then((data) => booksLoaded(data));\n\n  }\n\n  render() {\n    const { books, loading } = this.props;\n    const booksForRender = books.map((book) => {\n      return (\n        <li key={book.id}><BookListItem book={book}/></li>\n      )\n    })\n    if (loading) {\n      return <Spinner />\n    }\n    return (\n      <ul className='book-list'>\n        {booksForRender}\n      </ul>\n    )\n  }\n}\n\nBookList.propTypes = {\n  books: PropTypes.arrayOf(PropTypes.object),\n  booksLoaded: PropTypes.func,\n  loading: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = ({books, loading}) => {\n  return {\n    books,\n    loading,\n  }\n}\n\nconst mapDispatchToProps = {\n  booksLoaded\n}\n\nexport default compose(\n  withBookstoreService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(BookList);"]},"metadata":{},"sourceType":"module"}