{"ast":null,"code":"import _objectSpread from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar updateCartItem = function updateCartItem(book) {\n  var item = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var quantity = arguments.length > 2 ? arguments[2] : undefined;\n  var _item$id = item.id,\n      id = _item$id === void 0 ? book.id : _item$id,\n      _item$title = item.title,\n      title = _item$title === void 0 ? book.title : _item$title,\n      _item$count = item.count,\n      count = _item$count === void 0 ? 0 : _item$count,\n      _item$total = item.total,\n      total = _item$total === void 0 ? 0 : _item$total;\n  return {\n    id: id,\n    title: title,\n    count: count + quantity,\n    total: total + quantity * book.price\n  };\n};\n\nvar updateOrder = function updateOrder(state, id, quantity) {\n  var books = state.bookList.books,\n      cartItems = state.shoppingCart.cartItems; // Сохраняем тело книги из массива books\n\n  var book = books.find(function (item) {\n    return item.id === id;\n  }); // Получаем индекс\n\n  var indexInCart = cartItems.findIndex(function (item) {\n    return item.id === id;\n  }); // Получем элемент из корзины по индксу, если элемента нет, то item будет undefined\n\n  var item = cartItems[indexInCart];\n  var newItem = updateCartItem(book, item, quantity); //  Если элемент есть, то мы его модифицируем, и ставляем его в середину массива\n\n  return _objectSpread({}, state, {\n    cartItems: updateCartItems(cartItems, newItem, indexInCart)\n  });\n};\n\nvar updateShoppingCart = function updateShoppingCart(state, action) {\n  if (state === undefined) {\n    return {\n      cartItems: [],\n      orderTotal: 180\n    };\n  }\n\n  switch (action.type) {\n    case 'ADD_BOOK_TO_CART':\n      return updateOrder(state, action.payload, 1);\n\n    case 'REMOVE_BOOK_FROM_CART':\n      return updateOrder(state, action.payload, -1);\n\n    case 'REMOVE_ALL_BOOKS_FROM_CART':\n      var book = state.shoppingCart.cartItems.find(function (_ref) {\n        var id = _ref.id;\n        return id === action.payload;\n      });\n      return updateOrder(state, action.payload, -book.count);\n\n    default:\n      return state.shoppingCart;\n  }\n};\n\nexport default updateShoppingCart;","map":{"version":3,"sources":["/Users/ruslan/Desktop/petProjects/react-apps/re-store/src/reducers/shopping-cart.js"],"names":["updateCartItem","book","item","quantity","id","title","count","total","price","updateOrder","state","books","bookList","cartItems","shoppingCart","find","indexInCart","findIndex","newItem","updateCartItems","updateShoppingCart","action","undefined","orderTotal","type","payload"],"mappings":";;AAAA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAA+B;AAAA,MAAxBC,IAAwB,uEAAjB,EAAiB;AAAA,MAAbC,QAAa;AAAA,iBAEaD,IAFb,CAE7CE,EAF6C;AAAA,MAE7CA,EAF6C,yBAExCH,IAAI,CAACG,EAFmC;AAAA,oBAEaF,IAFb,CAE/BG,KAF+B;AAAA,MAE/BA,KAF+B,4BAEvBJ,IAAI,CAACI,KAFkB;AAAA,oBAEaH,IAFb,CAEXI,KAFW;AAAA,MAEXA,KAFW,4BAEH,CAFG;AAAA,oBAEaJ,IAFb,CAEAK,KAFA;AAAA,MAEAA,KAFA,4BAEQ,CAFR;AAGpD,SAAO;AACLH,IAAAA,EAAE,EAAFA,EADK;AAELC,IAAAA,KAAK,EAALA,KAFK;AAGLC,IAAAA,KAAK,EAAEA,KAAK,GAAGH,QAHV;AAILI,IAAAA,KAAK,EAAEA,KAAK,GAAGJ,QAAQ,GAAGF,IAAI,CAACO;AAJ1B,GAAP;AAMD,CATD;;AAWA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQN,EAAR,EAAYD,QAAZ,EAAyB;AAAA,MACzBQ,KADyB,GACYD,KADZ,CACpCE,QADoC,CACzBD,KADyB;AAAA,MACFE,SADE,GACYH,KADZ,CACjBI,YADiB,CACFD,SADE,EAE3C;;AACA,MAAMZ,IAAI,GAAGU,KAAK,CAACI,IAAN,CAAW,UAACb,IAAD;AAAA,WAAUA,IAAI,CAACE,EAAL,KAAYA,EAAtB;AAAA,GAAX,CAAb,CAH2C,CAI3C;;AACA,MAAMY,WAAW,GAAGH,SAAS,CAACI,SAAV,CAAoB,UAACf,IAAD;AAAA,WAAUA,IAAI,CAACE,EAAL,KAAYA,EAAtB;AAAA,GAApB,CAApB,CAL2C,CAM3C;;AACA,MAAMF,IAAI,GAAGW,SAAS,CAACG,WAAD,CAAtB;AACA,MAAIE,OAAO,GAAGlB,cAAc,CAACC,IAAD,EAAOC,IAAP,EAAaC,QAAb,CAA5B,CAR2C,CAS3C;;AACA,2BACKO,KADL;AAEEG,IAAAA,SAAS,EAAEM,eAAe,CAACN,SAAD,EAAYK,OAAZ,EAAqBF,WAArB;AAF5B;AAID,CAdD;;AAgBA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACV,KAAD,EAAQW,MAAR,EAAmB;AAC5C,MAAIX,KAAK,KAAKY,SAAd,EAAyB;AACvB,WAAO;AACLT,MAAAA,SAAS,EAAE,EADN;AAELU,MAAAA,UAAU,EAAE;AAFP,KAAP;AAID;;AAED,UAAQF,MAAM,CAACG,IAAf;AACE,SAAK,kBAAL;AACE,aAAOf,WAAW,CAACC,KAAD,EAAQW,MAAM,CAACI,OAAf,EAAwB,CAAxB,CAAlB;;AACF,SAAK,uBAAL;AACE,aAAOhB,WAAW,CAACC,KAAD,EAAQW,MAAM,CAACI,OAAf,EAAwB,CAAE,CAA1B,CAAlB;;AACF,SAAK,4BAAL;AACE,UAAMxB,IAAI,GAAGS,KAAK,CAACI,YAAN,CAAmBD,SAAnB,CAA6BE,IAA7B,CAAkC;AAAA,YAAEX,EAAF,QAAEA,EAAF;AAAA,eAAUA,EAAE,KAAKiB,MAAM,CAACI,OAAxB;AAAA,OAAlC,CAAb;AACA,aAAOhB,WAAW,CAACC,KAAD,EAAQW,MAAM,CAACI,OAAf,EAAwB,CAACxB,IAAI,CAACK,KAA9B,CAAlB;;AACF;AACE,aAAOI,KAAK,CAACI,YAAb;AATJ;AAWD,CAnBD;;AAqBA,eAAeM,kBAAf","sourcesContent":["const updateCartItem = (book, item = {}, quantity) => {\n\n  const {id = book.id, title = book.title, count = 0, total = 0} = item;\n  return {\n    id,\n    title,\n    count: count + quantity,\n    total: total + quantity * book.price,\n  }\n}\n\nconst updateOrder = (state, id, quantity) => {\n  const {bookList: {books}, shoppingCart: {cartItems}} = state;\n  // Сохраняем тело книги из массива books\n  const book = books.find((item) => item.id === id);\n  // Получаем индекс\n  const indexInCart = cartItems.findIndex((item) => item.id === id);\n  // Получем элемент из корзины по индксу, если элемента нет, то item будет undefined\n  const item = cartItems[indexInCart];\n  let newItem = updateCartItem(book, item, quantity)\n  //  Если элемент есть, то мы его модифицируем, и ставляем его в середину массива\n  return {\n    ...state,\n    cartItems: updateCartItems(cartItems, newItem, indexInCart),\n  };\n}\n\nconst updateShoppingCart = (state, action) => {\n  if (state === undefined) {\n    return {\n      cartItems: [],\n      orderTotal: 180\n    };\n  }\n\n  switch (action.type) {\n    case 'ADD_BOOK_TO_CART':\n      return updateOrder(state, action.payload, 1);\n    case 'REMOVE_BOOK_FROM_CART':\n      return updateOrder(state, action.payload, - 1);\n    case 'REMOVE_ALL_BOOKS_FROM_CART':\n      const book = state.shoppingCart.cartItems.find(({id}) => id === action.payload);\n      return updateOrder(state, action.payload, -book.count);\n    default:\n      return state.shoppingCart\n  }\n}\n\nexport default updateShoppingCart;"]},"metadata":{},"sourceType":"module"}