{"ast":null,"code":"import _classCallCheck from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/src/components/book-list/book-list.js\";\n\nimport React, { Component } from 'react';\nimport BookListItem from \"../book-list-item\";\nimport { connect } from 'react-redux';\nimport { withBookstoreService } from '../hoc';\nimport { fetchBooks } from '../../actions';\nimport { compose } from '../../utils';\nimport PropTypes from 'prop-types';\nimport './book-list.css';\nimport Spinner from \"../spinner\";\nimport ErrorIndicator from \"../error-indicator\";\n\nvar BookList = function BookList(_ref) {\n  var books = _ref.books;\n  var booksForRender = books.map(function (book) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: book.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BookListItem, {\n      book: book,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"book-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, booksForRender);\n};\n\nvar BookListContainer = /*#__PURE__*/function (_Component) {\n  _inherits(BookListContainer, _Component);\n\n  function BookListContainer(props) {\n    _classCallCheck(this, BookListContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BookListContainer).call(this, props));\n  }\n\n  _createClass(BookListContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var fetchBooks = this.props.fetchBooks;\n      fetchBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          books = _this$props.books,\n          loading = _this$props.loading,\n          error = _this$props.error;\n\n      if (loading) {\n        return /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 14\n          }\n        });\n      }\n\n      if (error) {\n        return /*#__PURE__*/React.createElement(ErrorIndicator, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 14\n          }\n        });\n      }\n    }\n  }]);\n\n  return BookListContainer;\n}(Component);\n\nBookList.propTypes = {\n  booksLoaded: PropTypes.func,\n  booksRequested: PropTypes.func,\n  booksError: PropTypes.func,\n  loading: PropTypes.bool.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var books = _ref2.books,\n      loading = _ref2.loading,\n      error = _ref2.error;\n  return {\n    books: books,\n    loading: loading,\n    error: error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, _ref3) {\n  var bookstoreService = _ref3.bookstoreService;\n  return {\n    fetchBooks: fetchBooks(dispatch, bookstoreService)\n  };\n};\n\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(BookList);","map":{"version":3,"sources":["/Users/ruslan/Desktop/petProjects/react-apps/re-store/src/components/book-list/book-list.js"],"names":["React","Component","BookListItem","connect","withBookstoreService","fetchBooks","compose","PropTypes","Spinner","ErrorIndicator","BookList","books","booksForRender","map","book","id","BookListContainer","props","loading","error","propTypes","booksLoaded","func","booksRequested","booksError","bool","isRequired","mapStateToProps","mapDispatchToProps","dispatch","bookstoreService"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,QAArC;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,iBAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAC5B,MAAMC,cAAc,GAAGD,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD,EAAU;AACzC,wBACE;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkB,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAED,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,CADF;AAGD,GAJsB,CAAvB;AAMA,sBACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,cADH,CADF;AAKD,CAZD;;IAcMI,iB;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,0FACXA,KADW;AAElB;;;;wCAEmB;AAAA,UACVZ,UADU,GACK,KAAKY,KADV,CACVZ,UADU;AAElBA,MAAAA,UAAU;AACX;;;6BAEQ;AAAA,wBAC2B,KAAKY,KADhC;AAAA,UACCN,KADD,eACCA,KADD;AAAA,UACQO,OADR,eACQA,OADR;AAAA,UACiBC,KADjB,eACiBA,KADjB;;AAEP,UAAID,OAAJ,EAAa;AACX,4BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,UAAIC,KAAJ,EAAW;AACT,4BAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAEF;;;;EAnB6BlB,S;;AAsBhCS,QAAQ,CAACU,SAAT,GAAqB;AACnBC,EAAAA,WAAW,EAAEd,SAAS,CAACe,IADJ;AAEnBC,EAAAA,cAAc,EAAEhB,SAAS,CAACe,IAFP;AAGnBE,EAAAA,UAAU,EAAEjB,SAAS,CAACe,IAHH;AAInBJ,EAAAA,OAAO,EAAEX,SAAS,CAACkB,IAAV,CAAeC;AAJL,CAArB;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,QAA6B;AAAA,MAA3BhB,KAA2B,SAA3BA,KAA2B;AAAA,MAApBO,OAAoB,SAApBA,OAAoB;AAAA,MAAXC,KAAW,SAAXA,KAAW;AACnD,SAAO;AACLR,IAAAA,KAAK,EAALA,KADK;AAELO,IAAAA,OAAO,EAAPA,OAFK;AAGLC,IAAAA,KAAK,EAALA;AAHK,GAAP;AAKD,CAND;;AAQA,IAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,SAAkC;AAAA,MAAtBC,gBAAsB,SAAtBA,gBAAsB;AAC3D,SAAO;AACLzB,IAAAA,UAAU,EAAEA,UAAU,CAACwB,QAAD,EAAWC,gBAAX;AADjB,GAAP;AAGD,CAJD;;AAMA,eAAexB,OAAO,CACpBF,oBAAoB,EADA,EAEpBD,OAAO,CAACwB,eAAD,EAAkBC,kBAAlB,CAFa,CAAP,CAGblB,QAHa,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport BookListItem from \"../book-list-item\";\nimport { connect } from 'react-redux';\nimport { withBookstoreService } from '../hoc'\nimport { fetchBooks } from '../../actions';\nimport {compose} from '../../utils';\nimport PropTypes from 'prop-types';\n\nimport './book-list.css'\nimport Spinner from \"../spinner\";\nimport ErrorIndicator from \"../error-indicator\";\n\nconst BookList = ({books}) => {\n  const booksForRender = books.map((book) => {\n    return (\n      <li key={book.id}><BookListItem book={book}/></li>\n    )\n  })\n\n  return (\n    <ul className='book-list'>\n      {booksForRender}\n    </ul>\n  )\n}\n\nclass BookListContainer extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { fetchBooks } = this.props;\n    fetchBooks();\n  }\n\n  render() {\n    const { books, loading, error } = this.props;\n    if (loading) {\n      return <Spinner />\n    }\n    if (error) {\n      return <ErrorIndicator />\n    }\n\n  }\n}\n\nBookList.propTypes = {\n  booksLoaded: PropTypes.func,\n  booksRequested: PropTypes.func,\n  booksError: PropTypes.func,\n  loading: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = ({books, loading, error}) => {\n  return {\n    books,\n    loading,\n    error\n  }\n}\n\nconst mapDispatchToProps = (dispatch, {bookstoreService}) => {\n  return {\n    fetchBooks: fetchBooks(dispatch, bookstoreService)\n  }\n}\n\nexport default compose(\n  withBookstoreService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(BookList);"]},"metadata":{},"sourceType":"module"}