{"ast":null,"code":"import _classCallCheck from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/src/components/book-list/book-list.js\";\nimport React, { Component } from 'react';\nimport BookListItem from \"../book-list-item\";\nimport { connect } from 'react-redux';\nimport { withBookstoreService } from '../hoc';\nimport { booksLoaded, booksRequested, booksError } from '../../actions';\nimport { compose } from '../../utils';\nimport PropTypes from 'prop-types';\nimport './book-list.css';\nimport Spinner from \"../spinner\";\nimport ErrorIndicator from \"../error-indicator\";\n\nvar BookList = /*#__PURE__*/function (_Component) {\n  _inherits(BookList, _Component);\n\n  function BookList(props) {\n    _classCallCheck(this, BookList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BookList).call(this, props));\n  }\n\n  _createClass(BookList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          getAll = _this$props.bookstoreService.getAll,\n          booksLoaded = _this$props.booksLoaded,\n          booksRequested = _this$props.booksRequested,\n          booksError = _this$props.booksError;\n      booksRequested();\n      getAll().then(function (data) {\n        return booksLoaded(data);\n      }).catch(function (error) {\n        return booksError(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props2 = this.props,\n          books = _this$props2.books,\n          loading = _this$props2.loading,\n          error = _this$props2.error;\n      var booksForRender = books.map(function (book) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: book.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(BookListItem, {\n          book: book,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 27\n          }\n        }));\n      });\n\n      if (loading) {\n        return /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 14\n          }\n        });\n      }\n\n      if (error) {\n        return /*#__PURE__*/React.createElement(ErrorIndicator, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"book-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, booksForRender);\n    }\n  }]);\n\n  return BookList;\n}(Component);\n\nBookList.propTypes = {\n  books: PropTypes.arrayOf(PropTypes.object),\n  booksLoaded: PropTypes.func,\n  booksRequested: PropTypes.func,\n  booksError: PropTypes.func,\n  loading: PropTypes.bool.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var books = _ref.books,\n      loading = _ref.loading,\n      error = _ref.error;\n  return {\n    books: books,\n    loading: loading,\n    error: error\n  };\n};\n\nvar mapDispatchToProps = {\n  booksLoaded: booksLoaded,\n  booksRequested: booksRequested,\n  booksError: booksError\n};\nexport default compose(withBookstoreService(), connect(mapStateToProps, mapDispatchToProps))(BookList);","map":{"version":3,"sources":["/Users/ruslan/Desktop/petProjects/react-apps/re-store/src/components/book-list/book-list.js"],"names":["React","Component","BookListItem","connect","withBookstoreService","booksLoaded","booksRequested","booksError","compose","PropTypes","Spinner","ErrorIndicator","BookList","props","getAll","bookstoreService","then","data","catch","error","books","loading","booksForRender","map","book","id","propTypes","arrayOf","object","func","bool","isRequired","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport BookListItem from \"../book-list-item\";\nimport { connect } from 'react-redux';\nimport { withBookstoreService } from '../hoc'\nimport { booksLoaded, booksRequested, booksError } from '../../actions';\nimport {compose} from '../../utils';\nimport PropTypes from 'prop-types';\n\nimport './book-list.css'\nimport Spinner from \"../spinner\";\nimport ErrorIndicator from \"../error-indicator\";\n\nclass BookList extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const {\n      bookstoreService: {\n        getAll\n      },\n      booksLoaded,\n      booksRequested,\n      booksError,\n    } = this.props;\n\n    booksRequested();\n    getAll()\n      .then((data) => booksLoaded(data))\n      .catch((error) => booksError(error))\n\n  }\n\n  render() {\n    const { books, loading, error } = this.props;\n    const booksForRender = books.map((book) => {\n      return (\n        <li key={book.id}><BookListItem book={book}/></li>\n      )\n    })\n    if (loading) {\n      return <Spinner />\n    }\n    if (error) {\n      return <ErrorIndicator />\n    }\n    return (\n      <ul className='book-list'>\n        {booksForRender}\n      </ul>\n    )\n  }\n}\n\nBookList.propTypes = {\n  books: PropTypes.arrayOf(PropTypes.object),\n  booksLoaded: PropTypes.func,\n  booksRequested: PropTypes.func,\n  booksError: PropTypes.func,\n  loading: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = ({books, loading, error}) => {\n  return {\n    books,\n    loading,\n    error\n  }\n}\n\nconst mapDispatchToProps = {\n  booksLoaded,\n  booksRequested,\n  booksError,\n}\n\nexport default compose(\n  withBookstoreService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(BookList);"]},"metadata":{},"sourceType":"module"}