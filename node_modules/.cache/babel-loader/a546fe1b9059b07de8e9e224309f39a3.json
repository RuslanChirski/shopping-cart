{"ast":null,"code":"import _objectSpread from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 180\n};\n\nvar updateCartItems = function updateCartItems(cartItems, newItem, idx) {\n  if (idx < 0) {\n    return [].concat(_toConsumableArray(cartItems), [newItem]);\n  } else {\n    return [].concat(_toConsumableArray(cartItems.slice(0, idx)), [newItem], _toConsumableArray(cartItems.slice(idx + 1)));\n  }\n};\n\nvar updateCartItem = function updateCartItem(book) {\n  var item = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var quantity = arguments.length > 2 ? arguments[2] : undefined;\n  var _item$id = item.id,\n      id = _item$id === void 0 ? book.id : _item$id,\n      _item$title = item.title,\n      title = _item$title === void 0 ? book.title : _item$title,\n      _item$count = item.count,\n      count = _item$count === void 0 ? 0 : _item$count,\n      _item$total = item.total,\n      total = _item$total === void 0 ? 0 : _item$total;\n  return {\n    id: id,\n    title: title,\n    count: count + quantity,\n    total: total + quantity * book.price\n  };\n};\n\nvar updateOrder = function updateOrder() {\n  //  Сохраняем id книги\n  var id = action.payload; // Сохраняем тело книги из массива books\n\n  var book = state.books.find(function (item) {\n    return item.id === id;\n  }); // Получаем индекс\n\n  var indexInCart = state.books.findIndex(function (item) {\n    return item.id === id;\n  }); // Получем элемент из корзины по индксу, если элемента нет, то item будет undefined\n\n  var item = state.cartItems[indexInCart];\n  var newItem = updateCartItem(book, item); //  Если элемент есть, то мы его модифицируем, и ставляем его в середину массива\n\n  return _objectSpread({}, state, {\n    cartItems: updateCartItems(state.cartItems, newItem, indexInCart)\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCH_BOOKS_SUCCESS':\n      return _objectSpread({}, state, {\n        books: action.payload,\n        loading: false,\n        error: null\n      });\n\n    case 'FETCH_BOOKS_REQUEST':\n      return _objectSpread({}, state, {\n        books: [],\n        loading: true,\n        error: null\n      });\n\n    case 'FETCH_BOOKS_FAILURE':\n      return _objectSpread({}, state, {\n        books: [],\n        loading: false,\n        error: action.payload\n      });\n\n    case 'ADD_BOOK_TO_CART':\n      //  Сохраняем id книги\n      var id = action.payload; // Сохраняем тело книги из массива books\n\n      var book = state.books.find(function (item) {\n        return item.id === id;\n      }); // Получаем индекс\n\n      var indexInCart = state.books.findIndex(function (item) {\n        return item.id === id;\n      }); // Получем элемент из корзины по индксу, если элемента нет, то item будет undefined\n\n      var item = state.cartItems[indexInCart];\n      var newItem = updateCartItem(book, item); //  Если элемент есть, то мы его модифицируем, и ставляем его в середину массива\n\n      return _objectSpread({}, state, {\n        cartItems: updateCartItems(state.cartItems, newItem, indexInCart)\n      });\n\n    case 'REMOVE_ALL_BOOKS_FROM_CART':\n    case 'REMOVE_BOOK_FROM_CART':\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ruslan/Desktop/petProjects/react-apps/re-store/src/reducers/index.js"],"names":["initialState","books","loading","error","cartItems","orderTotal","updateCartItems","newItem","idx","slice","updateCartItem","book","item","quantity","id","title","count","total","price","updateOrder","action","payload","state","find","indexInCart","findIndex","reducer","type"],"mappings":"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","sourcesContent":["const initialState = {\n  books: [],\n  loading: true,\n  error: null,\n  cartItems: [],\n  orderTotal: 180\n}\n\nconst updateCartItems = (cartItems, newItem, idx) => {\n  if (idx < 0) {\n    return [\n      ...cartItems,\n      newItem\n    ]\n  } else {\n    return [\n      ...cartItems.slice(0, idx),\n      newItem,\n      ...cartItems.slice(idx + 1),\n    ]\n  }\n}\nconst updateCartItem = (book, item = {}, quantity) => {\n  const {id = book.id, title = book.title, count = 0, total = 0} = item;\n    return {\n      id,\n      title,\n      count: count + quantity,\n      total: total + quantity * book.price,\n    }\n}\n\nconst updateOrder = () => {\n  //  Сохраняем id книги\n  const id = action.payload;\n  // Сохраняем тело книги из массива books\n  const book = state.books.find((item) => item.id === id);\n  // Получаем индекс\n  const indexInCart = state.books.findIndex((item) => item.id === id);\n  // Получем элемент из корзины по индксу, если элемента нет, то item будет undefined\n  const item = state.cartItems[indexInCart];\n  let newItem = updateCartItem(book, item)\n  //  Если элемент есть, то мы его модифицируем, и ставляем его в середину массива\n  return {\n    ...state,\n    cartItems: updateCartItems(state.cartItems, newItem, indexInCart),\n  };\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_BOOKS_SUCCESS':\n      return {\n        ...state,\n        books: action.payload,\n        loading: false,\n        error: null,\n      };\n    case 'FETCH_BOOKS_REQUEST':\n      return {\n        ...state,\n        books: [],\n        loading: true,\n        error: null,\n      };\n    case 'FETCH_BOOKS_FAILURE':\n      return {\n        ...state,\n        books: [],\n        loading: false,\n        error: action.payload\n    };\n    case 'ADD_BOOK_TO_CART':\n      //  Сохраняем id книги\n      const id = action.payload;\n      // Сохраняем тело книги из массива books\n      const book = state.books.find((item) => item.id === id);\n      // Получаем индекс\n      const indexInCart = state.books.findIndex((item) => item.id === id);\n      // Получем элемент из корзины по индксу, если элемента нет, то item будет undefined\n      const item = state.cartItems[indexInCart];\n      let newItem = updateCartItem(book, item)\n      //  Если элемент есть, то мы его модифицируем, и ставляем его в середину массива\n      return {\n        ...state,\n        cartItems: updateCartItems(state.cartItems, newItem, indexInCart),\n      };\n    case 'REMOVE_ALL_BOOKS_FROM_CART':\n    case 'REMOVE_BOOK_FROM_CART':\n    default:\n      return state;\n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}