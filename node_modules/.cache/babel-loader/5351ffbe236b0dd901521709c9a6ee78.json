{"ast":null,"code":"import _objectSpread from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/ruslan/Desktop/petProjects/react-apps/re-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar initialState = {\n  bookList: {\n    books: [],\n    loading: true,\n    error: null\n  },\n  shoppingCart: {\n    cartItems: [],\n    orderTotal: 180\n  }\n};\n\nvar updateCartItems = function updateCartItems(cartItems, newItem, idx) {\n  if (newItem.count === 0) {\n    return [].concat(_toConsumableArray(cartItems.slice(0, idx)), _toConsumableArray(cartItems.slice(idx + 1)));\n  }\n\n  if (idx < 0) {\n    return [].concat(_toConsumableArray(cartItems), [newItem]);\n  } else {\n    return [].concat(_toConsumableArray(cartItems.slice(0, idx)), [newItem], _toConsumableArray(cartItems.slice(idx + 1)));\n  }\n};\n\nvar updateCartItem = function updateCartItem(book) {\n  var item = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var quantity = arguments.length > 2 ? arguments[2] : undefined;\n  var _item$id = item.id,\n      id = _item$id === void 0 ? book.id : _item$id,\n      _item$title = item.title,\n      title = _item$title === void 0 ? book.title : _item$title,\n      _item$count = item.count,\n      count = _item$count === void 0 ? 0 : _item$count,\n      _item$total = item.total,\n      total = _item$total === void 0 ? 0 : _item$total;\n  return {\n    id: id,\n    title: title,\n    count: count + quantity,\n    total: total + quantity * book.price\n  };\n};\n\nvar updateOrder = function updateOrder(state, id, quantity) {\n  var books = state.bookList.books,\n      cartItems = state.shoppingCart.cartItems; // Сохраняем тело книги из массива books\n\n  var book = books.find(function (item) {\n    return item.id === id;\n  }); // Получаем индекс\n\n  var indexInCart = cartItems.findIndex(function (item) {\n    return item.id === id;\n  }); // Получем элемент из корзины по индксу, если элемента нет, то item будет undefined\n\n  var item = cartItems[indexInCart];\n  var newItem = updateCartItem(book, item, quantity); //  Если элемент есть, то мы его модифицируем, и ставляем его в середину массива\n\n  return _objectSpread({}, state, {\n    cartItems: updateCartItems(cartItems, newItem, indexInCart)\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action.type);\n\n  switch (action.type) {\n    case 'FETCH_BOOKS_SUCCESS':\n      return _objectSpread({}, state, {\n        bookList: {\n          books: action.payload,\n          loading: false,\n          error: null\n        }\n      });\n\n    case 'FETCH_BOOKS_REQUEST':\n      return _objectSpread({}, state, {\n        bookList: {\n          books: [],\n          loading: true,\n          error: null\n        }\n      });\n\n    case 'FETCH_BOOKS_FAILURE':\n      return _objectSpread({}, state, {\n        bookList: {\n          books: [],\n          loading: false,\n          error: action.payload\n        }\n      });\n\n    case 'ADD_BOOK_TO_CART':\n      return _objectSpread({}, state, {\n        shoppingCart: updateOrder(state, action.payload, 1)\n      });\n\n    case 'REMOVE_BOOK_FROM_CART':\n      return _objectSpread({}, state, {\n        shoppingCart: updateOrder(state, action.payload, -1)\n      });\n\n    case 'REMOVE_ALL_BOOKS_FROM_CART':\n      var book = state.cartItems.find(function (_ref) {\n        var id = _ref.id;\n        return id === action.payload;\n      });\n      return _objectSpread({}, state, {\n        shoppingCart: updateOrder(state, action.payload, -book.count)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ruslan/Desktop/petProjects/react-apps/re-store/src/reducers/index.js"],"names":["initialState","bookList","books","loading","error","shoppingCart","cartItems","orderTotal","updateCartItems","newItem","idx","count","slice","updateCartItem","book","item","quantity","id","title","total","price","updateOrder","state","find","indexInCart","findIndex","reducer","action","console","log","type","payload"],"mappings":"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","sourcesContent":["const initialState = {\n  bookList: {\n    books: [],\n    loading: true,\n    error: null,\n  },\n  shoppingCart: {\n    cartItems: [],\n    orderTotal: 180\n  },\n}\n\nconst updateCartItems = (cartItems, newItem, idx) => {\n  if (newItem.count === 0) {\n    return [\n      ...cartItems.slice(0, idx),\n      ...cartItems.slice(idx + 1),\n    ]\n  }\n\n  if (idx < 0) {\n    return [\n      ...cartItems,\n      newItem\n    ]\n  } else {\n    return [\n      ...cartItems.slice(0, idx),\n      newItem,\n      ...cartItems.slice(idx + 1),\n    ]\n  }\n}\nconst updateCartItem = (book, item = {}, quantity) => {\n\n  const {id = book.id, title = book.title, count = 0, total = 0} = item;\n    return {\n      id,\n      title,\n      count: count + quantity,\n      total: total + quantity * book.price,\n    }\n}\n\nconst updateOrder = (state, id, quantity) => {\n  const {bookList: {books}, shoppingCart: {cartItems}} = state;\n  // Сохраняем тело книги из массива books\n  const book = books.find((item) => item.id === id);\n  // Получаем индекс\n  const indexInCart = cartItems.findIndex((item) => item.id === id);\n  // Получем элемент из корзины по индксу, если элемента нет, то item будет undefined\n  const item = cartItems[indexInCart];\n  let newItem = updateCartItem(book, item, quantity)\n  //  Если элемент есть, то мы его модифицируем, и ставляем его в середину массива\n  return {\n    ...state,\n    cartItems: updateCartItems(cartItems, newItem, indexInCart),\n  };\n}\n\nconst reducer = (state = initialState, action) => {\n  console.log(action.type)\n  switch (action.type) {\n    case 'FETCH_BOOKS_SUCCESS':\n      return {\n        ...state,\n        bookList: {\n          books: action.payload,\n          loading: false,\n          error: null,\n        }\n      };\n    case 'FETCH_BOOKS_REQUEST':\n      return {\n        ...state,\n        bookList: {\n          books: [],\n          loading: true,\n          error: null,\n        }\n      };\n    case 'FETCH_BOOKS_FAILURE':\n      return {\n        ...state,\n        bookList: {\n          books: [],\n          loading: false,\n          error: action.payload\n        }\n    };\n    case 'ADD_BOOK_TO_CART':\n      return {\n        ...state,\n        shoppingCart: updateOrder(state, action.payload, 1)\n      };\n    case 'REMOVE_BOOK_FROM_CART':\n      return {\n        ...state,\n        shoppingCart: updateOrder(state, action.payload, - 1)\n  };\n    case 'REMOVE_ALL_BOOKS_FROM_CART':\n      const book = state.cartItems.find(({id}) => id === action.payload);\n      return {\n        ...state,\n        shoppingCart: updateOrder(state, action.payload, -book.count)\n      }\n    default:\n      return state;\n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}